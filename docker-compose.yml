services:
  # Weaviate 服務 (可選，如果你已經有外部 Weaviate 實例，可以移除此服務)
  weaviate:
    image: semitechnologies/weaviate:stable-v1.32-c56a5d4
    ports:
      - "8080:8080" # Weaviate RESTful API
      - "50051:50051" # Weaviate gRPC API
    # restart: on-failure # 不重啟
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true' # 允許匿名訪問，生產環境請配置認證
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none' # 如果你不使用內建的向量化模組，可以設定為 'none'
      ENABLE_MODULES: '' # 啟用你需要的模組，例如 'text2vec-openai' 等
      CLUSTER_HOSTNAME: node1
      TZ: '${TIMEZONE}'
      # 如果需要啟用特定模組，例如 OpenAI，需提供 API 金鑰
      # OPENAI_APIKEY: 'YOUR_OPENAI_API_KEY'
    volumes:
      - weaviate_data:/var/lib/weaviate # 持久化 Weaviate 資料
    networks:
      docker-weaviate-database-manager:

  # 後端服務
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.backend
    ports:
      - "8000:8000" # 將容器的 8000 埠映射到主機的 8000 埠
    volumes:
      - ./backend:/app # 將主機的 backend 目錄映射到容器的 /app，方便開發時修改程式碼
      - ./backend/entrypoint.sh:/usr/local/bin/entrypoint.sh
    depends_on:
      - weaviate # 確保後端在 Weaviate 啟動後才啟動 (非硬性依賴，僅啟動順序)
    environment:
      # 後端不需要直接的 WEAVIATE_URL 環境變數，因為前端會透過請求傳遞
      # 但如果後端有其他需要連接 Weaviate 的邏輯，可以設定
      WEAVIATE_URL: ${WEAVIATE_URL} # Docker 內部網路名稱和埠號
      TZ: ${TIMEZONE}
    networks:
      docker-weaviate-database-manager:

  # 前端服務
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.frontend
    ports:
      - "5173:5173" # 將容器的 5173 埠映射到主機的 5173 埠
    volumes:
      - ./frontend:/app/frontend # 映射前端程式碼，方便開發時修改
      - ./frontend/entrypoint.sh:/usr/local/bin/entrypoint.sh
    depends_on:
      - backend # 確保前端在後端啟動後才啟動
    environment:
      # 將 Weaviate URL 傳遞給前端，供前端在啟動時自動連線
      # 注意：這裡的 WEAVIATE_URL 是給前端 Vue.js 應用程式使用的
      # 它的值應該是前端可以直接訪問的 Weaviate URL
      # 如果 Weaviate 服務也在 docker-compose 內，則為 http://localhost:8080
      # 如果是外部 Weaviate，則為其外部可訪問的 URL
      WEAVIATE_URL: ${WEAVIATE_URL} # 這裡設置為 localhost:8080，因為 Weaviate 服務被映射到主機的 8080 埠
      TZ: ${TIMEZONE}
    networks:
      docker-weaviate-database-manager:

# 定義 Docker 卷，用於持久化 Weaviate 資料
volumes:
  weaviate_data:

networks:
  docker-weaviate-database-manager:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24
